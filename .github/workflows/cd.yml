name: CD

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build using Python ${{ matrix.python }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    # The maximum number of minutes to let a workflow run
    # before GitHub automatically cancels it. Default: 360
    timeout-minutes: 30

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        python:
          - '3.11'
          - '3.12'
          - '3.13'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Set up Python ${{ matrix.python }}
        id: setup-python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
          virtualenvs-path: .venv

      - name: Cache dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-$${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python }}-

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --without=dev --without=testing --without=docs --no-root

      - name: Build clusx distribution (sdist and wheel)
        run: poetry build

      - name: Test package installation
        run: |
          pip install dist/*.whl
          clusx --version
